version: '3.8'

networks:
  movie-app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: nginx/Dockerfile
    ports:
      - "8080:80"
    networks:
      - movie-app-network
    depends_on:
      - api

  api:
    build: ./api
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    networks:
      - movie-app-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - movie-app-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - movie-app-network
    depends_on:
      - api

  grafana:
    image: grafana/grafana:8.2.3
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/provisioning/dashboards/api-dashboard.json:/etc/grafana/provisioning/dashboards/api-dashboard.json
    networks:
      - movie-app-network
    depends_on:
      - prometheus